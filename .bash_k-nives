#
# Copyleft (C) 2021 Sthenley Macedo
#
# File:               .bash_k-nives
# Project repository: https://github.com/sthenley/k-nives
# Description:        k-nives functions - kubectl swiss army knife
# Initial version:    Sthenley Macedo <contato@sthenley.com>
# Creation date:      2021-03-31
# Last revision:      2021-04-02
# Version:            1.0
#
#
# INSTALL OR UPDATE:
# curl -sLJ https://raw.githubusercontent.com/sthenley/k-nives/main/.bash_k-nives -o ~/.bash_k-nives
# grep -q '. ~/.bash_k-nives' ~/.bashrc || echo -e '\nif [ -f ~/.bash_k-nives ]; then\n    . ~/.bash_k-nives\nfi' >> ~/.bashrc && . ~/.bash_k-nives
#
# USAGE:
# k-nives --help
#
# TO DO: 
# - Dinamic aliases and any number of namespaces
#
# CHANGE LOG:
# v1.0: first release

# -----------------------------------------------------------------------------
#                                   MAIN
# -----------------------------------------------------------------------------

# kubecolor alias
command -v kubecolor >/dev/null 2>&1 && alias kubectl='kubecolor'

# -----------------------------------------------------------------------------
#                             VARIABLES - SETUP
# -----------------------------------------------------------------------------

export K_NIVES_VERSION="1.0"         # k-nives version
export K_NIVES_TAIL=10               # Number of lines for k-nives kl 't' flag
export K_NIVES_LIGHT=false           # Enable/Disable dark colors for light backgrounds
export K_NIVES_DEPLOYMENT=false      # Enable/Disable app deployment name column at k-nives kp
export K_NIVES_ALL_CONTAINERS=true   # Enable/Disable k-nives kl '--all-containers=true' flag

# NAMESPACES ALIASES
export K_NIVES_NAMESPACE1="caip"
export K_NIVES_NAMESPACE1_ALIASES="c|ca|converse"

export K_NIVES_NAMESPACE2="monitoring"
export K_NIVES_NAMESPACE2_ALIASES="m|mo|mon|monitor"

# -----------------------------------------------------------------------------
#                             K-NIVES FUNCTIONS
# -----------------------------------------------------------------------------

function k-nives() {
  # List k-nives functions/tools

  local RETVAL=0
  local G="\033[1;32m"
  local B="\033[1;34m"
  local N="\033[1m"
  local O="\033[0m"

  echo -e "\
  *** ‚öôÔ∏è ${B}üá∞-nives${O} v${K_NIVES_VERSION} üî™ kubectl swiss army knife

     ${G}kn${O} - Shows avaiable or set cluster namespace - A default '--namespace NAMESPACE' for kubectl (context)
     ${G}kp${O} - List cluster pods
     ${G}kl${O} - Shows pod containers log

     Usage: '<TOOL> --help' for instructions - like '${N}kn --help${O}'
     K_NIVES_TAIL ${N}${K_NIVES_TAIL}${O}
     K_NIVES_LIGHT ${N}${K_NIVES_LIGHT}${O}
     K_NIVES_DEPLOYMENT ${N}${K_NIVES_DEPLOYMENT}${O}
     K_NIVES_ALL_CONTAINERS ${N}${K_NIVES_ALL_CONTAINERS}${O}

     More info: https://github.com/sthenley/k-nives
  "
  command -v kubectl &> /dev/null || { 
    echo -e "   You don't have kubectl installed - üá∞-nives will not be useful"
    RETVAL=2
  }
  command -v ccze &> /dev/null || echo -e "   You don't have ccze installed - No colors for output"
  command -v kubecolor &> /dev/null || echo -e "   You don't have kubecolor installed - No colors for output"

  return ${RETVAL}
}

function kn() {
  # k-nives kn
  # Shows avaiable or set cluster namespace - A default '--namespace NAMESPACE' for kubectl (context)

  command -v kubectl &> /dev/null || {
    echo -e "   You don't have kubectl installed - üá∞-nives will not be useful"
    return 2
  }

  local G="\033[1;32m"
  local B="\033[1;34m"
  local N="\033[1m"
  local O="\033[0m"
  local NAMESPACE=$(kubectl config view --minify | awk '{print $2}' FS='namespace:')
  [ -n ${NAMESPACE} ] && NAMESPACE_FLAG="‚úîÔ∏è" || NAMESPACE_FLAG="‚õî"
  local CONTEXT=$(kubectl config current-context)

  [[ -z ${1} || "${1}" =~ ^-.* || "${@}" =~ "-h" || "${@}" =~ "--help" ]] && { 
    echo -e "    ‚öôÔ∏è ${B}üá∞-nives${O} v${K_NIVES_VERSION} üî™ kn\n"
      [ -z ${1} ] && echo -e "    *** ‚ö†Ô∏è To change default kubectl namespace, please provide a namespace ID - Like 'monitoring'"
    echo -e "\
    *** Usage: kn <NAMESPACE>
       NAMESPACE aliases:
        ${K_NIVES_NAMESPACE1_ALIASES} = ${K_NIVES_NAMESPACE1}
        ${K_NIVES_NAMESPACE2_ALIASES} = ${K_NIVES_NAMESPACE2}

    *** ‚ÑπÔ∏è Current context:
    "

    kubectl config get-contexts $(kubectl config current-context)
    echo -e "    *** ‚ÑπÔ∏è Avaiable namespaces:"
    kubectl get namespace
    echo -e "    *** Current namespace: ${NAMESPACE_FLAG}${G}${NAMESPACE//[[:space:]]/}${O}"
    return 0
  }
  
  eval "case \"${1}\" in
    ${K_NIVES_NAMESPACE1_ALIASES})
      NAMESPACE="caip"
      ;;
    ${K_NIVES_NAMESPACE2_ALIASES})
      NAMESPACE="monitoring"
      ;;
    *)
      NAMESPACE="${1}"
      ;;
  esac"

  CMD="kubectl config set-context $(kubectl config current-context) --namespace ${NAMESPACE}"

  echo -e "*** ‚ö†Ô∏è Running: ${N}${CMD}${O}"
  eval $CMD && echo -e "\n*** Current namespace: ${NAMESPACE_FLAG}${G}${NAMESPACE}${O}"
}

function kp() {
  # k-nives kp
  # List cluster pods
  
  command -v kubectl &> /dev/null || {
    echo -e "   You don't have kubectl installed - üá∞-nives will not be useful"
    return 2
  }
  
  local G="\033[1;32m"
  local B="\033[1;34m"
  local Y="\033[1;33m"
  local N="\033[1m"
  local O="\033[0m"
  local NAMESPACE=$(kubectl config view --minify | awk '{print $2}' FS='namespace:')
  [ -n ${NAMESPACE} ] && local NAMESPACE_FLAG="‚úîÔ∏è" || local NAMESPACE_FLAG="‚õî"
  local CONTEXT=$(kubectl config current-context)
  NAMESPACE=${NAMESPACE//[[:space:]]/}
  ([[ "${K_NIVES_DEPLOYMENT}" == true ]] && command -v kubecolor &> /dev/null) && local DEPLOYMENT=" -L app"

  [[ "${@}" =~ "-h" || "${@}" =~ "--help" ]] && {
    echo -e "\
    ‚öôÔ∏è ${B}üá∞-nives${O} v${K_NIVES_VERSION} üî™ kp

    ‚ÑπÔ∏è Executes a 'kubectl get pods${DEPLOYMENT}'
    Usage: kp [PODS] [ARGS]

       PODS                - Pod name or part of pod name (All match ocurrences at kubectl get pods output)
       ARGS                - Any extra args for 'kubectl get pods${DEPLOYMENT}'
       Current namespace   - ${NAMESPACE_FLAG}${G}${NAMESPACE}${O}@${CONTEXT}

    ‚ö†Ô∏è Hints:
       You can also filter pods with a --selector=app=<APP>
       Use'--field-selector=status.phase!=Running' to show not running pods
       Use '-o wide' to show more information
       Use '-w' to watch list changes
       Use '-n <NAMESPACE>' to show pods of <NAMESPACE> namespace
       'kn <NAMESPACE>' sets a default namespace - You'll not need '-n <NAMESPACE>' with kp and kubectl
    "
    command -v ccze &> /dev/null || echo -e "   You don't have ccze installed - No colors for output"
    command -v kubecolor &> /dev/null || echo -e "   You don't have kubecolor installed - No colors for output"
    return 0
  }

  [[ -n ${1} && ! "${1}" =~ ^-.* ]] && { 
    local PODS=$(eval "kubectl get pods -o=name | awk '/${1}/{printf \" \"\$2 }' FS='pod/'")

    if [ "${PODS}" == "" ]; then
      echo -e "*** ‚õî No *${Y}${1}${O}* pod at ${G}${NAMESPACE}${O} namespace. Try list pods with just 'kp'"
      return 3
    fi    
  }

  [ -n "${PODS}" ] && local ARGS=" ${PODS} ${@: 2}" || local ARGS=" ${@: 1}"

  [ "${K_NIVES_LIGHT}" == true ] && local LIGHT=" --light-background"
  
  local CMD="kubectl${LIGHT} get pods${DEPLOYMENT}${ARGS}"

  echo -e "*** ‚ö†Ô∏è Running: ${N}${CMD}${O}"
  echo -e "*** Namespace: ${NAMESPACE_FLAG}${G}${NAMESPACE}${O}@${CONTEXT}"
  eval $CMD
}

function kl() {
  # k-nives kl
  # Shows pod containers log

  [ -z ${1} ] && local RETVAL=1 || local RETVAL=0
  local G="\033[1;32m"
  local B="\033[1;34m"
  local Y="\033[1;33m"
  local N="\033[1m"
  local O="\033[0m"
  local NAMESPACE=$(kubectl config view --minify | awk '{print $2}' FS='namespace:')
  [ -n ${NAMESPACE} ] && local NAMESPACE_FLAG="‚úîÔ∏è" || local NAMESPACE_FLAG="‚õî"
  [ "${K_NIVES_ALL_CONTAINERS}" == true ] && local CONTAINERS=" --all-containers=true"
  local CONTEXT=$(kubectl config current-context)
  NAMESPACE=${NAMESPACE//[[:space:]]/}

  [[ -z "${1}" || "${@}" =~ "-h" || "${@}" =~ "--help" ]] && {
    echo -e "\
    ‚öôÔ∏è ${B}üá∞-nives${O} v${K_NIVES_VERSION} üî™ kl

    ‚ÑπÔ∏è Executes a 'kubectl logs <POD> --timestamps${CONTAINERS}' for a pod
    Usage: kl <POD> [t] [ARGS]

       POD                 - Pod name or part of pod name (First ocurrence at kubectl get pods output)
       t                   - Do a '-f --tail ${K_NIVES_TAIL}'
       ARGS                - Any extra args for kubectl logs <POD>
       Current namespace   - ${NAMESPACE_FLAG}${G}${NAMESPACE}${O}@${CONTEXT}

    ‚ö†Ô∏è Hints:
       Use '-n <NAMESPACE>' to show pods of <NAMESPACE> namespace
       'kn <NAMESPACE>' sets a default namespace - You'll not need '-n <NAMESPACE>' with kp and kubectl
       '--since=10m' to show only for last 10 minutes
    "
    command -v kubectl &> /dev/null || {
      echo -e "   You don't have kubectl installed - üá∞-nives will not be useful"
      RETVAL=2
    }
    command -v ccze &> /dev/null || echo -e "   You don't have ccze installed - No colors for output"
    command -v kubecolor &> /dev/null || echo -e "   You don't have kubecolor installed - No colors for output"

    return ${RETVAL}
  }

  local POD=$(eval "kubectl get pods -o=name | awk '/${1}/{print \$2;exit;}' FS='pod/'")

  if [ "${POD}" == "" ]; then
    echo -e "*** ‚õî No *${Y}${1}${O}* pod at ${G}${NAMESPACE}${O} namespace. Try list pods with kp"
    return 3
  fi
  
  [ "${2}" == "t" ] && local ARGS=" -f --tail ${K_NIVES_TAIL} ${@: 3}" || local ARGS=" ${@: 2}"
  [ "${K_NIVES_LIGHT}" == true ] && local LIGHT=" --light-background"

  local CMD="kubectl${LIGHT} logs ${POD//[[:space:]]/} --timestamps ${CONTAINERS}${ARGS}"
  command -v ccze &> /dev/null && CMD+="| ccze -m ansi"

  echo -e "*** ‚ö†Ô∏è Running: ${N}${CMD}${O}"
  echo -e "*** Namespace: ${NAMESPACE_FLAG}${G}${NAMESPACE}${O}@${CONTEXT}"
  eval $CMD
}

#EOF